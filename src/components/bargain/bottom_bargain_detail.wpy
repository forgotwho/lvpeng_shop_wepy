<template>
  <view class="buy-bar-placeholder">
  </view>
  <view class="row group-bar-box">
    <button wx:if="{{detail.isFloor}}" class="column-center btn-buy" plain open-type="share" disabled>
      <text class="muted">找人帮砍</text>
    </button>
    <button wx:else class="column-center btn-buy" plain open-type="share">
      <text class="primary">找人帮砍</text>
    </button>
    <view class="column-center btn-group" @tap="buy({{detail.rule.goods}}, {{detail.ruleId}}, {{detail.id}})">
      <text>立即购买</text>
    </view>
  </view>
</template>

<script>
  import router from '../../mixins/router';
  import wepy from 'wepy';
  import order from '../../api/order';
  import Sku from '../../utils/Sku';
  import Cart from '../../utils/Cart';

  export default class DetailBottom extends wepy.component {
    props = {
      detail: {}
    };
    data = {
      isFav: false,
      state: 'bargain',
      id: ''
    };
    skuManager = null;
    cartManager = Cart.create();
    clear () {
      console.info('[SilderPanel] clear');
      this.goods = null;
      this.action = 'cart';
      this.display = false;
    }
    methods = {
      async buy () {
        // TODO 搬自slider
        if (!this.sku.next) {
          return;
        }
        const {num} = this.sku;
        const goods = this.detail.rule.goods;
        goods.originalPrice = this.detail.rule.skuDetail.price;
        goods.sellPrice = this.detail.balance;
        const skuText = null;
        const cart = this.cartManager.createCart(goods, skuText, num);
        const trade = order.createCartTrade([cart], {orderType: 10});
        const {id, ruleId} = this.detail;
        Object.assign(trade, {ruleId, id});
        this.$root.$preload('params', {trade, type: this.state});
        this.$root.$navigate(`../order/trade`);
        this.clear();
      }
    };
    computed = {
      sku() {
        if (this.skuManager == null) return;
        return this.skuManager.export();
      }
    };
    watch = {
      async detail(current, origin) {
        if (origin != null && origin.id != null) return;
        // 构造SKU对象
        this.skuManager = new Sku(current.rule.goods);
        this.skuManager.action = this.state;
        this.$apply();
      }
    };
    mixins = [router];
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .group-bar-box{
    position: fixed;
    bottom: 0;
    height: 105rpx;
    width: 100%;
    border-top: $border;
    background-color: white;
    .btn-buy, .btn-group{
      height: 100%;
      width: 50%;
      background-color: white;
      border-left: $border;
      .money-box{
        font-weight: bold;
      }
    }
    .btn-buy{
      border:none;
      border-radius: 0rpx;
    }
    .btn-group{
      background-color:$color-primary;
      text{
        color: #fff;
      }
    }
  }
  .buy-bar-placeholder{
    height: 105rpx;
    width: 100%;
  }
</style>
